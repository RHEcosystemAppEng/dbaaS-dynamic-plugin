# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Push image

on:
  push:
    branches:
    - main
    - release-0.4.0-dev

env:
  PACKAGE_NAME: dbaas-dynamic-plugin-dev
  QUAY_USER: ecosystem-appeng

jobs:
  push:
    if: github.repository == 'RHEcosystemAppEng/dbaas-dynamic-plugin'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Log in to image registry
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        registry: quay.io

    - run: npm install --global yarn@1.22.10

    - name: Retrieve version
      run: echo "::set-output name=VERSION::$(yarn version --json | jq '.data' |  tr -d '[:space:]' | tr -d '"' | awk -F ":" {'print $2'})"
      id: version
    - run: |
        yarn config set version-git-tag false
        yarn version --new-version ${{ steps.version.outputs.VERSION }}-$(git rev-parse --short HEAD)
      name: Add git sha to project version
    - run: cat <<< $(jq '.name = "${{ env.PACKAGE_NAME }}"' package.json) > package.json
      name: Change package name

    - run: |
        QUAY_USER=${{ env.QUAY_USER }} yarn img-build
        QUAY_USER=${{ env.QUAY_USER }} yarn img-push
      name: Build and push image

    - name: Retrieve dev image and version
      run: |
        echo "::set-output name=DEV_VERSION::$(yarn version --json | jq -r '.data' |  tr -d '[:space:]' | awk -F ":" {'print $2'})"
        echo "::set-output name=DEV_IMAGE::$(QUAY_USER=${{ env.QUAY_USER }} yarn -s img)"
      id: dev-version

    - name: Print image url
      run: |
        echo "Dev version is ${{ steps.dev-version.outputs.DEV_VERSION }}"
        echo "Image pushed to ${{ steps.dev-version.outputs.DEV_IMAGE }}"

    - name: Update DYNAMIC_PLUGIN_DEV_IMAGE secret
      run: |
        yarn install
        DYNAMIC_PLUGIN_DEV_IMAGE="${{ steps.dev-version.outputs.DEV_IMAGE }}" GH_TOKEN="${{ secrets.GH_TOKEN }}" node dev-img-secret.js
